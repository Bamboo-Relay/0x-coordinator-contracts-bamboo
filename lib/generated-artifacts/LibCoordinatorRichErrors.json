{
    "schemaVersion": "2.0.0",
    "contractName": "LibCoordinatorRichErrors",
    "compilerOutput": {
        "abi": [],
        "devdoc": {
            "methods": {}
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820d1bd6d62a0c91588382130b55dfdff9913492ab78994af22a5a8747805078f8b64736f6c63430005100032",
                "opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD1 0xBD PUSH14 0x62A0C91588382130B55DFDFF9913 0x49 0x2A 0xB7 DUP10 SWAP5 0xAF 0x22 0xA5 0xA8 PUSH21 0x7805078F8B64736F6C634300051000320000000000 ",
                "sourceMap": "606:1609:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820d1bd6d62a0c91588382130b55dfdff9913492ab78994af22a5a8747805078f8b64736f6c63430005100032",
                "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD1 0xBD PUSH14 0x62A0C91588382130B55DFDFF9913 0x49 0x2A 0xB7 DUP10 SWAP5 0xAF 0x22 0xA5 0xA8 PUSH21 0x7805078F8B64736F6C634300051000320000000000 ",
                "sourceMap": "606:1609:9:-;;;;;;;;"
            }
        }
    },
    "sources": {
        "src/libs/LibCoordinatorRichErrors.sol": {
            "id": 9
        }
    },
    "sourceCodes": {
        "src/libs/LibCoordinatorRichErrors.sol": "/*\n\n  Copyright 2019 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\n\n\nlibrary LibCoordinatorRichErrors {\n    enum SignatureErrorCodes {\n        INVALID_LENGTH,\n        UNSUPPORTED,\n        ILLEGAL,\n        INVALID\n    }\n\n    // bytes4(keccak256(\"SignatureError(uint8,bytes32,bytes)\"))\n    bytes4 internal constant SIGNATURE_ERROR_SELECTOR =\n        0x779c5223;\n\n    // bytes4(keccak256(\"InvalidOriginError(address)\"))\n    bytes4 internal constant INVALID_ORIGIN_ERROR_SELECTOR =\n        0xa458d7ff;\n\n    // bytes4(keccak256(\"InvalidApprovalSignatureError(bytes32,address)\"))\n    bytes4 internal constant INVALID_APPROVAL_SIGNATURE_ERROR_SELECTOR =\n        0xd789b640;\n\n    // solhint-disable func-name-mixedcase\n    function SignatureError(\n        SignatureErrorCodes errorCode,\n        bytes32 hash,\n        bytes memory signature\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            SIGNATURE_ERROR_SELECTOR,\n            errorCode,\n            hash,\n            signature\n        );\n    }\n\n    function InvalidOriginError(\n        address expectedOrigin\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            INVALID_ORIGIN_ERROR_SELECTOR,\n            expectedOrigin\n        );\n    }\n\n    function InvalidApprovalSignatureError(\n        bytes32 transactionHash,\n        address approverAddress\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            INVALID_APPROVAL_SIGNATURE_ERROR_SELECTOR,\n            transactionHash,\n            approverAddress\n        );\n    }\n}\n"
    },
    "sourceTreeHashHex": "0x98ee1d9f3a306335ae70228614a5f71e4f3b48c23d0817f86c11336ee59aa4e0",
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul",
            "remappings": [
                "@0x/contracts-exchange-libs=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/0x-monorepo/node_modules/@0x/contracts-exchange-libs",
                "@0x/contracts-utils=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/0x-monorepo/contracts/coordinator/node_modules/@0x/contracts-utils",
                "@0x/contracts-exchange=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/0x-monorepo/contracts/coordinator/node_modules/@0x/contracts-exchange"
            ]
        }
    },
    "chains": {}
}
